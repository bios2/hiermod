{
  "hash": "e71f0b228f67695235ec5bc3ba4272a3",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Modelling the mites\"\ndescription: |\n  Working out the mite data example.\nexecute:\n  freeze: true\n  eval: false\nformat:\n  html:\n    code-tools: true\neditor_options: \n  chunk_output_type: console\ndraft: true\n---\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(mite, package = \"vegan\")\ndata(\"mite.env\", package = \"vegan\")\nlibrary(tidyverse)\nlibrary(cmdstanr)\n\n# combine data and environment\nmite_data_long <- bind_cols(mite.env, mite) |> \n  tibble::rownames_to_column(var= \"site_id\") |> \n  mutate(site_id = parse_number(site_id)) |> \n  pivot_longer(Brachy:Trimalc2, names_to = \"spp\", values_to = \"abd\")\n\n\nmite_data_long_transformed <- mite_data_long |> \n  mutate(presabs = as.numeric(abd>0),\n         # center predictors\n         water = (WatrCont - mean(WatrCont)) / 100\n         )\n\n# pick a species that has about 50/50 chance \n\nmite_data_long_transformed |>\n  group_by(spp) |>\n  summarize(freq = mean(presabs)) |>\n  filter(freq > .4 & freq < .6)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nspp_nvec <- unique(mite_data_long_transformed$spp) |> \n  {\\(x) set_names(seq_along(x), x)}()\n\nmite_data_long_transformed <- mite_data_long |> \n  mutate(presabs = as.numeric(abd>0),\n         # center predictors\n         water = (WatrCont - mean(WatrCont)) / 100,\n         spp_id = spp_nvec[mite_data_long_transformed$spp]\n         )\n\nmite_data_long_transformed |> \n  ggplot(aes(x = water, y = presabs)) + \n  geom_point() + \n  stat_smooth(method = \"glm\", method.args = list(family = \"binomial\")) + \n  facet_wrap(~spp)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmite_bin <- mite\nmite_bin[mite_bin>0] <- 1\n\n\nmake_data_list <- function(df){\n  mite_pa_list <- \n    with(df, \n         list(\n           Nsites = max(site_id),\n           Nspp = max(spp_id),\n           site_id = site_id,\n           spp_id = spp_id,\n           x = water,\n           y = as.numeric(abd>0)\n         )\n    )\n}\n```\n:::\n\n\n\n\n## Modelling pres abs\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npresabs_all_spp <- cmdstan_model(\n  stan_file = \"topics/05_modelling_mites/presabs_all_spp.stan\", \n  pedantic = TRUE)\n\npresabs_all_spp\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npresabs_all_spp_posterior <- \n  presabs_all_spp$sample(\n    data = mite_pa_list, \n    refresh = 1000, parallel_chains = 4\n    )\n```\n:::\n\n\n\n### Sampling posterior predictive with `gq`\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n## Modelling counts\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncount_all_spp <- cmdstan_model(\n  stan_file = \"topics/05_modelling_mites/count_all_spp.stan\", \n  pedantic = TRUE)\n\ncount_all_spp\n```\n:::\n\n\n\n\nConvert to LONG format all the outputs\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmite_abd_list <- make_data_list(mite_data_long_transformed)\n\ncount_all_spp_post <- count_all_spp$sample(\n    data = mite_abd_list, \n    refresh = 200, parallel_chains = 4\n    )\n```\n:::\n\n\n\n\n### PPC using gq\n\nMake predictions with the poisson model using a separate gq block\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncount_all_spp_gq <- cmdstan_model(\n  stan_file = \"topics/05_modelling_mites/count_all_spp_gq.stan\", \n  pedantic = TRUE)\n\ncount_all_spp_gq\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncount_all_spp_gq_post <- count_all_spp_gq$generate_quantities(count_all_spp_post, data = mite_abd_list)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nyrep_mat <- count_all_spp_gq_post$draws(variables = \"yrep\") |> \n  posterior::as_draws_matrix()\n\nbayesplot::ppc_dens_overlay(mite_data_long$abd, yrep_mat |> head(50)) + \n  coord_cartesian(xlim = c(0, 20))\n```\n:::\n\n\n\n\nDoes that mean that the probability of getting 1 or higher (ie not zero) from the poisson distribution, will give us a good line for presence-absence?\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncount_all_spp_line_gq <- cmdstan_model(\n  stan_file = \"topics/05_modelling_mites/count_all_spp_line_gq.stan\", \n  pedantic = TRUE)\n\ncount_all_spp_line_gq\n```\n:::\n\n\n\nmake a new data list with expand.grid\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnew_list <- tibble(water = modelr::seq_range(mite_data_long_transformed$water, n = 10), \n         site_id = 1:10) |> \n  expand_grid(spp_id = unique(mite_data_long_transformed$spp_id), abd = 0) |> \n  make_data_list()\n\n\ncount_all_spp_line_gq$generate_quantities(count_all_spp_post, data = new_list)\n```\n:::\n\n\n\n\n\nIn this tutorial I want to give one example of a model-buildig process with the mite data. \n\n* data plots, causal model. Does the causal model suggest the need to control for spacE? there might be collider bias or something, it would be interesting to make that point\n* simulated process\n* model incidence, straight to hierarchical\n* model abundance. note thenumber of zeros. in a ppc check\n* calculate the proportion of zeros and plot its densiy, and show the real number of zeros\n* 0-inflated, and the similarity to modelling incidence\n* correlated effect of the two as a function of some latent trait. \n\n* do we have traits of mites? \n\n* adding in effects of environmental variables. \n\n* ARD? ",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}